AWSTemplateFormatVersion: "2010-09-09"
Description: "Create EFS system and Mount Targets for test VPC"

Parameters:
    VPC:
      Type: AWS::EC2::VPC::Id
      Description: The VPC identity
      Default: vpc-ID

    PublicSubnet1:
      Type: AWS::EC2::Subnet::Id
      Description: The subnet where to launch the service
      Default: Publicsubnet1-ID

    PublicSubnet2:
      Type: AWS::EC2::Subnet::Id
      Description: the subnet where to Launch the service
      Default: Publicsubnet2-ID

    PublicSubnet3:
      Type: AWS::EC2::Subnet::Id
      Description: the subnet where to Launch the service
      Default: Publicsubnet3-ID
    
    WebServerSecurityGroup:
      Type: AWS::EC2::SecurityGroup::Id
      Description: Web security group Id of the Vpc
      Default: sg-ID

    ELBWebServerSecurityGroup:
      Type: AWS::EC2::SecurityGroup::Id
      Description: Web security group Id of the Vpc
      Default: sg-ID

    KeyName:
      Description: The EC2 Key Pair to allow SSH access to the instance
      Type: AWS::EC2::KeyPair::KeyName
      ConstraintDescription: must be the name of an existing EC2 KeyPair.

    InstanceType:
      Default: 't2.micro'
      AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      ConstraintDescription: Choose an instance type.
      Description: App node instance type
      Type: String

    AutoScalingGroupDesiredCapacity:
      Type: Number
      Default: 1
      AllowedValues:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      Description: Desired capacity of Onemerit Group ASG.

    ImageId: 
      Default: ami-0d1990093968d1b8c
      Type: String
      AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"

    SSHLocation:
      Description: The IP address range that can be used to SSH to the EC2 instances
      Type: String
      MinLength: '9'
      MaxLength: '18'
      Default: 0.0.0.0/0
      AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
      ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x

Resources:
  AsgLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub ${AWS::StackName}-Onemerit-launch-template
      LaunchTemplateData:
        CreditSpecification:
          CpuCredits: Unlimited
        ImageId: !Ref ImageId
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName
        Monitoring:
          Enabled: True
        SecurityGroupIds:
          - !Ref WebServerSecurityGroup
        UserData:
          Fn::Base64: |
            #!/bin/bash
            sudo apt update -y
            sudo snap start amazon-ssm-agent
            sudo systemctl start snap.amazon-ssm-agent.amazon-ssm-agent.service
            sudo systemctl enable snap.amazon-ssm-agent.amazon-ssm-agent.service
   
  ApplicationAsg:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub ${AWS::StackName}-ASG
      MinSize: '1'
      MaxSize: '6'
      DesiredCapacity: !Ref AutoScalingGroupDesiredCapacity
      HealthCheckGracePeriod: 300
      LaunchTemplate:
        LaunchTemplateId: !Ref AsgLaunchTemplate
        Version: !GetAtt AsgLaunchTemplate.LatestVersionNumber
      VPCZoneIdentifier:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
        - !Ref PublicSubnet3
      TargetGroupARNs:
        - !Ref WebAppTargetGroup
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-ASG
          PropagateAtLaunch: True
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: True
        
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
        - !Ref PublicSubnet3
      IpAddressType: ipv4
      Name: !Sub ${AWS::StackName}-ALB
      Scheme: internet-facing
      Type: application
      SecurityGroups:
        - !Ref ELBWebServerSecurityGroup  
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-ALB

  HTTPlistener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
          
  WebAppTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Name: !Sub ${AWS::StackName}-WebTG
      Port: 80
      Protocol: HTTP
      TargetType: instance
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-WebTG

          



