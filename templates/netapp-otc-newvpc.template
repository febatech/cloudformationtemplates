AWSTemplateFormatVersion: 2010-09-09
Description: This template will create a VPC with a public subnet.
Metadata:
  Version: v1.0
  Comments: Generated by the NetApp QuickStart
Parameters:
  VPCCIDR:
    Description: VPC CIDR Range (will be a /16 block)
    Type: String
    Default: 172.18.0.0
    AllowedValues:
      - 172.18.0.0
      - 172.19.0.0
      - 172.20.0.0
      - 172.21.0.0
      - 172.22.0.0
      - 172.23.0.0
Mappings:
  VPCRanges:
    172.18.0.0:
      PublicSubnetAZ1: 172.18.0.0/22
    172.19.0.0:
      PublicSubnetAZ1: 172.19.0.0/22
    172.20.0.0:
      PublicSubnetAZ1: 172.20.0.0/22
    172.21.0.0:
      PublicSubnetAZ1: 172.21.0.0/22
    172.22.0.0:
      PublicSubnetAZ1: 172.22.0.0/22
    172.23.0.0:
      PublicSubnetAZ1: 172.23.0.0/22
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Join 
        - ''
        - - !Ref VPCCIDR
          - /16
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
        - Key: Network
          Value: Public
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - _VPC
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Join 
        - ''
        - - !Ref VPCCIDR
          - /24
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
        - Key: Network
          Value: Public
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - PublicSubnet
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
        - Key: Network
          Value: Public
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
        - Key: Network
          Value: Public
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable
  PublicNetworkAcl:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
        - Key: Network
          Value: Public
  InboundHTTPPublicNetworkAclEntry:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
  OutboundHTTPPublicNetworkAclEntry:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
  PublicSubnetNetworkAclAssociation:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      NetworkAclId: !Ref PublicNetworkAcl
Outputs:
  VPCID:
    Value: !Ref VPC
  PublicSubnet:
    Value: !Ref PublicSubnet
